<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Ctrl-Q – Getting Started</title>
    <link>/docs/getting-started/</link>
    <description>Recent content in Getting Started on Ctrl-Q</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    
	  <atom:link href="/docs/getting-started/index.xml" rel="self" type="application/rss+xml" />
    
    
      
        
      
    
    
    <item>
      <title>Docs: Security</title>
      <link>/docs/getting-started/security/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/getting-started/security/</guid>
      <description>
        
        
        &lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#virus-scanning&#34;&gt;Virus scanning&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#positive-scan-vs-false-positives&#34;&gt;Positive scan vs false positives&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#signed-binaries&#34;&gt;Signed binaries&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;p&gt;Ctrl-Q is open source and you have access to all source code.&lt;/p&gt;
&lt;p&gt;It is &lt;strong&gt;&lt;em&gt;your responsibility&lt;/em&gt;&lt;/strong&gt; to determine if Ctrl-Q is suitable for &lt;strong&gt;your&lt;/strong&gt; use case.&lt;br&gt;
The creators of Ctrl-Q, including Ptarmigan Labs, Göran Sander or any other contributor, can and must never be held liable to past or future security issues of Ctrl-Q.
If you have security concerns or ideas around Ctrl-Q, please get involved in the project and contribute to making it better!&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;If you discover a serious bug with Ctrl-Q that may pose a security problem, please disclose it
confidentially to security@ptarmiganlabs.com first, so it can be assessed and hopefully fixed
prior to being exploited.

Please do not raise GitHub issues for serious security-related doubts or problems.
&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&#34;virus-scanning&#34;&gt;Virus scanning&lt;/h2&gt;
&lt;p&gt;Every time a Ctrl-Q release is done the created binaries are sent to &lt;a href=&#34;https://www.virustotal.com/&#34;&gt;VirusTotal&lt;/a&gt; for scanning.&lt;br&gt;
VirusTotal acts as an aggregated virus scanner that sends the Ctrl-Q binaries to dozens of anti-virus scanners, including many of the major/most widely used ones.&lt;/p&gt;
&lt;p&gt;Links to the VirusTotal scan report are included in each release notes, making it easy to check the status of each binary:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/img/virustotal_release_4.png&#34; alt=&#34;VirusTotal scans as part of Ctrl-Q release notes&#34; title=&#34;VirusTotal scans as part of Ctrl-Q release notes&#34;&gt;&lt;/p&gt;
&lt;p&gt;A VirusTotal scan that reports &amp;ldquo;no risks found&amp;rdquo; can look like this:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/img/virustotal_scan_clear_4.png&#34; alt=&#34;VirusTotal scans with no risks found&#34; title=&#34;VirusTotal scans with no risks found&#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;positive-scan-vs-false-positives&#34;&gt;Positive scan vs false positives&lt;/h3&gt;
&lt;p&gt;If one or more of the security vendors used by VirusTotal reports an issue you have to make a decision.&lt;br&gt;
Is it a real issue or a false positive?&lt;/p&gt;
&lt;p&gt;You have to decide this yourself, but some general lines of thought can be:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;Is it a single vendor that reports the Ctrl-Q binary file to be a risk, or several vendors?
If one vendor reports an issue and 60+ vendors don&#39;t, you might be looking at a false positive.
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;But again - at the end of the day it&amp;rsquo;s &lt;strong&gt;you&lt;/strong&gt; that must make that decision.&lt;/p&gt;
&lt;p&gt;A scan where a single security vendor reports an issue can look like this:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/img/virustotal_scan_1_issue_4.png&#34; alt=&#34;VirusTotal scans with one issue found&#34; title=&#34;VirusTotal scans with one issue found&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;signed-binaries&#34;&gt;Signed binaries&lt;/h2&gt;
&lt;p&gt;The macOS executable binary is signed and notarized by Apple&amp;rsquo;s standard process.&lt;br&gt;
A warning may still be shown first time the app is started. This is expected and normal.&lt;/p&gt;
&lt;p&gt;The Windows executable binary is signed by &amp;ldquo;Ptarmigan Labs AB&amp;rdquo;.&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Docs: Authentication with Sense</title>
      <link>/docs/getting-started/qseow-auth/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/getting-started/qseow-auth/</guid>
      <description>
        
        
        &lt;h2 id=&#34;certificates&#34;&gt;Certificates&lt;/h2&gt;
&lt;p&gt;Ctrl-Q will authenticate with Sense using certificates.&lt;br&gt;
These certificates are &lt;a href=&#34;https://help.qlik.com/en-US/sense-admin/May2023/Subsystems/DeployAdministerQSE/Content/Sense_DeployAdminister/QSEoW/Administer_QSEoW/Managing_QSEoW/export-certificates.htm&#34;&gt;exported from the QMC&lt;/a&gt; and stored on disk in PEM format.&lt;/p&gt;
&lt;p&gt;Ctrl-Q can reference these certificates in two ways:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;if the &lt;code&gt;--auth-cert-file&lt;/code&gt; and &lt;code&gt;auth-cert-key-file&lt;/code&gt; options are used, Ctrl-Q will read the certificates from the disk files pointed to by those options.
&lt;ol&gt;
&lt;li&gt;The &lt;code&gt;--auth-root-cert-file&lt;/code&gt; option refers to the certificate CA, and is optional to use. In most cases it&amp;rsquo;s not needed.&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;If the options above are &lt;em&gt;not&lt;/em&gt; specified when Ctrl-Q is started, it will look for certificates in the &lt;code&gt;config&lt;/code&gt; folder in the same folder as the Ctrl-Q executable. The certificate files must be named &lt;code&gt;client.pem&lt;/code&gt;, &lt;code&gt;client_key.pem&lt;/code&gt; and &lt;code&gt;root.pem&lt;/code&gt;.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;The options &lt;code&gt;--auth-user-dir&lt;/code&gt; and &lt;code&gt;-auth-user-id&lt;/code&gt; are also needed to authenticate with Sense. They define which user will be used when interacting with both the engine and repository APIs.&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Docs: Colors &amp; formatting</title>
      <link>/docs/getting-started/colors-formatting/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/getting-started/colors-formatting/</guid>
      <description>
        
        
        &lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#all-oss-plain-text&#34;&gt;All OSs: plain text&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#windows-10-using-windows-terminal&#34;&gt;Windows 10 using Windows Terminal&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#macos-and-linux&#34;&gt;macOS and Linux&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;p&gt;Some of the Ctrl-Q commands use colors and emojis to better communicate the information retrieved from Qlik Sense.&lt;br&gt;
The task tree view is an example, but more commands may use colors in the future.&lt;/p&gt;
&lt;p&gt;The use of colors in console/command line applications has been around since at least the 80s.&lt;br&gt;
MS-DOS supported it, as did early Windows versions.&lt;/p&gt;
&lt;p&gt;Today this feature is quite fragmented.&lt;/p&gt;
&lt;p&gt;Console applications using colors are natively supported on macOS and Linux.&lt;br&gt;
On Windows Server 2016 and earlier it&amp;rsquo;s &lt;em&gt;very&lt;/em&gt; hard to get this working, later versions may be easier.&lt;br&gt;
On Windows 10 and later it&amp;rsquo;s possible to use Microsoft&amp;rsquo;s excellent new command line shell, &lt;a href=&#34;https://github.com/microsoft/terminal&#34;&gt;Windows Terminal&lt;/a&gt;.&lt;br&gt;
Highly recommended if you use a desktop Windows operating system!&lt;/p&gt;
&lt;p&gt;Ctrl-Q tries to offer plain text visuals unless extra features, flare and color is enabled via command line parameters.&lt;/p&gt;
&lt;p&gt;Some examples follow, showing different views of reload task trees.&lt;/p&gt;
&lt;h2 id=&#34;all-oss-plain-text&#34;&gt;All OSs: plain text&lt;/h2&gt;
&lt;p&gt;The command for the most basic task tree is&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-powershell&#34; data-lang=&#34;powershell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.\&lt;/span&gt;&lt;span style=&#34;color:#204a87&#34;&gt;ctrl-q&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;exe&lt;/span&gt; &lt;span style=&#34;color:#204a87&#34;&gt;task-get&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;`&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;-auth-type&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;cert&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;`&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;-host&lt;/span&gt; &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;192.168&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;100&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;109&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;`&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;-auth-user-dir&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;LAB&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;`&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;-auth-user-id&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;goran&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;`&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;-output-format&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;tree&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;`&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;-output-dest&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;screen&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;img src=&#34;/img/task-tree-no-color-1.png&#34; alt=&#34;Qlik Sense task tree 1&#34; title=&#34;Qlik Sense task tree with no colors or task details&#34;&gt;&lt;/p&gt;
&lt;p&gt;Add the &lt;code&gt;--tree-details&lt;/code&gt; option and the result contains a lot more details for each task. Not very easy to read though.&lt;br&gt;
Note: the &lt;code&gt;task-get&lt;/code&gt; command has lots of options, these are described in more detail on &lt;a href=&#34;/docs/command/task/#list-tasks-as-tree&#34;&gt;this page&lt;/a&gt;.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-powershell&#34; data-lang=&#34;powershell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.\&lt;/span&gt;&lt;span style=&#34;color:#204a87&#34;&gt;ctrl-q&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;exe&lt;/span&gt; &lt;span style=&#34;color:#204a87&#34;&gt;task-get&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;`&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;-auth-type&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;cert&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;`&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;-host&lt;/span&gt; &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;192.168&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;100&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;109&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;`&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;-auth-user-dir&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;LAB&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;`&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;-auth-user-id&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;goran&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;`&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;-output-format&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;tree&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;`&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;-output-dest&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;screen&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;`&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;-tree-details&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;img src=&#34;/img/task-tree-no-color-details-1.png&#34; alt=&#34;Qlik Sense task tree 2&#34; title=&#34;Qlik Sense task tree with task details but no colors&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;windows-10-using-windows-terminal&#34;&gt;Windows 10 using Windows Terminal&lt;/h2&gt;
&lt;p&gt;Thanks to Windows Terminal handling text coloring and emojis we can add a couple of options:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;--tree-icons&lt;/code&gt; to get emojis showing the result from each task&amp;rsquo;s last execution (success, fail etc)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;--text-color yes&lt;/code&gt; to get nicely colored text in the task tree&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-powershell&#34; data-lang=&#34;powershell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.\&lt;/span&gt;&lt;span style=&#34;color:#204a87&#34;&gt;ctrl-q&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;exe&lt;/span&gt; &lt;span style=&#34;color:#204a87&#34;&gt;task-get&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;`&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;-auth-type&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;cert&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;`&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;-host&lt;/span&gt; &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;192.168&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;100&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;109&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;`&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;-auth-user-dir&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;LAB&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;`&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;-auth-user-id&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;goran&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;`&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;-output-format&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;tree&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;`&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;-output-dest&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;screen&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;`&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;-tree-icons&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;`&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;-text-color&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;yes&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;img src=&#34;/img/task-tree-color-1.png&#34; alt=&#34;Qlik Sense task tree 3&#34; title=&#34;Qlik Sense task tree with colors but no task details&#34;&gt;&lt;/p&gt;
&lt;p&gt;Adding &lt;code&gt;--tree-details&lt;/code&gt; gives us a tree that&amp;rsquo;s a lot easier to read compared to previous, uncolored version.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-powershell&#34; data-lang=&#34;powershell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.\&lt;/span&gt;&lt;span style=&#34;color:#204a87&#34;&gt;ctrl-q&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;exe&lt;/span&gt; &lt;span style=&#34;color:#204a87&#34;&gt;task-get&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;`&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;-auth-type&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;cert&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;`&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;-host&lt;/span&gt; &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;192.168&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;100&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;109&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;`&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;-auth-user-dir&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;LAB&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;`&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;-auth-user-id&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;goran&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;`&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;-output-format&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;tree&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;`&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;-output-dest&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;screen&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;`&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;-tree-icons&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;`&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;-text-color&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;yes&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;`&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;-tree-details&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;img src=&#34;/img/task-tree-color-details-1.png&#34; alt=&#34;Qlik Sense task tree 4&#34; title=&#34;Qlik Sense task tree with task details and colors&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;macos-and-linux&#34;&gt;macOS and Linux&lt;/h2&gt;
&lt;p&gt;A task tree with colors on macOS and Linux versions of Ctrl-Q looks exactly like same as in Windows Terminal.&lt;br&gt;
The only difference is that you don&amp;rsquo;t have to install a new command line shell.&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Docs: Dry runs</title>
      <link>/docs/getting-started/dry-runs/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/getting-started/dry-runs/</guid>
      <description>
        
        
        &lt;p&gt;Many of Ctrl-Q&amp;rsquo;s commands will create, update or delete things in Sense.&lt;br&gt;
As long as you have specified the correct parameters that&amp;rsquo;s all good - but there is also the risk of using incorrect parameters or filters, causing too many (or too few or the wrong ones) resources in Sense to be affected.&lt;/p&gt;
&lt;p&gt;Most Ctrl-Q commands that change things in Sense have a &lt;code&gt;--dry-run&lt;/code&gt; option.&lt;br&gt;
If it is used, Ctrl-Q will not make any changes in Sense, but instead only show what &lt;em&gt;would&lt;/em&gt; happen.&lt;/p&gt;
&lt;p&gt;It&amp;rsquo;s thus a &lt;em&gt;very&lt;/em&gt; good idea to first do a dry run of the intended command, verify that the correct things would happen and then finally do a real execution of the desired Ctrl-Q command.&lt;/p&gt;
&lt;p&gt;Might take a bit of extra time, but better safe than sorry.&lt;/p&gt;

      </description>
    </item>
    
  </channel>
</rss>
